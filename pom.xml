<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.7</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>it.luca.batch</groupId>
    <artifactId>batch-data-factory</artifactId>
    <version>0.1.0</version>
    <packaging>pom</packaging>
    <description>Batch Data Factory - Spring application for generating random test data for batch applications</description>
    <organization>
        <name>it.luca</name>
        <url>https://github.com/carloniluca91</url>
    </organization>

    <modules>
        <module>application</module>
        <module>data-model</module>
    </modules>


    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
                <jdbc.user>data_factory_dev</jdbc.user>
                <jdbc.password>data_factory_dev</jdbc.password>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <spring.profiles.active>prod</spring.profiles.active>
                <jdbc.user>data_factory_prod</jdbc.user>
                <jdbc.password>data_factory_prod</jdbc.password>
            </properties>
        </profile>
    </profiles>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <jdbi.version>3.20.1</jdbi.version>
        <avro.version>1.8.2-cdh6.3.2</avro.version>
        <hadoop.client.version>3.0.0-cdh6.3.2</hadoop.client.version>
        <jackson.csv.version>2.11.4</jackson.csv.version>
        <java.utils.version>0.3.2</java.utils.version>
        <data.factory.version>0.3.0</data.factory.version>

        <!-- Application properties -->
        <jdbc.url>jdbc:postgresql://localhost:5432/${jdbc.user}?currentSchema=log</jdbc.url>
        <jdbc.log.table>t_batch_sample_generation_log</jdbc.log.table>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <finalName>${project.parent.artifactId}</finalName>
                        <excludes>
                            <exclude>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>datasources.yaml</exclude>
                </excludes>
            </resource>
        </resources>
    </build>

    <repositories>
        <repository>
            <id>Cloudera</id>
            <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jdbi</groupId>
                <artifactId>jdbi3-bom</artifactId>
                <type>pom</type>
                <version>${jdbi.version}</version>
                <scope>import</scope>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-csv -->
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-csv</artifactId>
                <version>${jackson.csv.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-hdfs-client -->
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-client</artifactId>
                <version>${hadoop.client.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-yarn-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-yarn-client</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-mapreduce-client-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-mapreduce-client-jobclient</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>

            <dependency>
                <groupId>it.luca</groupId>
                <artifactId>java-utils</artifactId>
                <version>${java.utils.version}</version>
            </dependency>

            <dependency>
                <groupId>it.luca</groupId>
                <artifactId>data-factory</artifactId>
                <version>${data.factory.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>